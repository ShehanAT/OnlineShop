@model IEnumerable<OrderViewModel>
@{ 
    ViewData["Title"] = "My Order History";
}

<div class="orders">
    <div class="container">
        <h1>@ViewData["Title"]</h1>
        <article class="orders-titles row">
            <section class="orders-title">Order number</section>
            <section class="orders-title">Date</section>
            <section class="orders-title">Total</section>
            <section class="orders-title">Status</section>
            <section class="orders-title"></section>
        </article>
        @if(Model != null && Model.Any())
        {
            @foreach(var item in Model)
            {
    <article class="orders-items row">
        @* Html.DisplayFor(expression) returns html markup of expression *@
        <section class="orders-items">@Html.DisplayFor(modelItem => item.OrderNumber)</section>
        <section class="orders-items">@Html.DisplayFor(modelItem => item.OrderDate)</section>
        <section class="orders-items">@Html.DisplayFor(modelItem => item.Total)</section>
        <section class="orders-items">@Html.DisplayFor(modelItem => item.Status)</section>
        <section class="orders-items">
            <a class="orders-link" asp-controller="Order" asp-action="Detail" asp-route-orderId="@item.OrderNumber">Details</a>
        </section>
        <section class="orders-items">
            @if(item.Status.ToLower() == "submitted")
            {
                <a class="orders-link" asp-controller="Order" asp-action="cancel" asp-route-orderId="@item.OrderNumber">Cancel</a>
            }
        </section>
    </article>
            }
        }
    </div>
</div>